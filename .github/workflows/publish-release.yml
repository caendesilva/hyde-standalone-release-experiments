# This workflow will build the application and publish a new release.
# It is triggered by pushes to the protected stable branch used for releases.
# This process is triggered via the GitHub UI using the create-release.yml action.

name: Publish a new release

on:
  push:
    branches: [ "stable" ]

permissions:
  contents: read

jobs:

  sync:
    runs-on: ubuntu-latest
    name: Merge stable branch into master

    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ref: master

      - name: Merge stable branch into master
        run: |
          git fetch origin stable:stable
          git merge stable
          git push origin master

  release:
    runs-on: ubuntu-latest
    name: Publish release

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ref: stable

      - name: Prepare version information
        run:  |
          echo "VERSION=$(php ./bin/get-release-version.php)" >> $GITHUB_ENV

      - name: Print version information
        run: |
          echo "Version: v${{ env.VERSION }}"

      - name: Verify signature against key server
        if: github.event.repository.full_name == 'hydephp/cli'
        run: |
          gpg --keyserver keys.openpgp.org --recv-keys 657B4D97184E9E6E596E6EA13B829782D5B7BA59
          echo "trust\n5\ny\n" | gpg --no-tty --command-fd 0 --edit-key 657B4D97184E9E6E596E6EA13B829782D5B7BA59
          gpg --verify builds/hyde.asc builds/hyde

      - name: Create a release
        uses: ncipollo/release-action@v1
        with:
          name: v${{ env.VERSION }}
          tag: v${{ env.VERSION }}
          commit: ${{ github.sha }}
          updateOnlyUnreleased: true
          generateReleaseNotes: true
          artifacts: builds/hyde
