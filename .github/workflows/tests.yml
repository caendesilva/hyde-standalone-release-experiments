name: Test Suite

on:
  push:
    branches: [ "master", "develop", "stable", "release/**" ]
  pull_request:
    branches: [ "master", "develop", "stable", "release/**" ]

permissions:
  statuses: write

jobs:
  coverage-tests:
    runs-on: ubuntu-latest
    name: Run tests with coverage

    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          coverage: xdebug
          extensions:
            fileinfo

      - uses: actions/checkout@v4

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: "${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}"
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Execute tests (Unit and Feature tests) via Pest
        run: vendor/bin/pest --coverage --coverage-clover ./coverage.xml

      - name: Parse coverage report
        id: coverage
        run: |
          php -r '$xml = simplexml_load_file("coverage.xml"); echo round($xml->project->metrics["coveredelements"] / $xml->project->metrics["elements"] * 100, 2);' > coverage.txt
          cat coverage.txt
          echo "coverage=$(cat coverage.txt)" >> $GITHUB_OUTPUT

      - name: Send GitHub status check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/hydephp/cli/statuses/${{ github.sha }} \
             -f "state=success" -f "target_url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
             -f "description=Code coverage is $(cat coverage.txt)%" -f "context=Code Coverage"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
