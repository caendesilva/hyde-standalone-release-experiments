name: Test Suite

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  coverage-tests:
    runs-on: ubuntu-latest
    name: Run tests with coverage

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          coverage: xdebug
          extensions:
            fileinfo

      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Execute tests (Unit and Feature tests) via Pest
        run: vendor/bin/pest --coverage-clover ./coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  matrix-tests:
    if: contains(github.event.pull_request.labels.*.name, 'halt-matrix-tests') != true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [8.1, 8.2, 8.3]

    runs-on: ${{ matrix.os }}
    name: Run tests - ${{ matrix.os }} ${{ matrix.php }}

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo

      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Execute tests (Unit and Feature tests) via Pest
        run: vendor/bin/pest

  build-executable:
    runs-on: ubuntu-latest
    name: Build executable

    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Get build version
        id: build-version
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "Version: ${{ steps.build-version.outputs.sha_short }}"

      - name: Build executable
        run: php hyde standalone:build --build-version-suffix ${{ steps.build-version.outputs.sha_short }}

      - name: Verify executable
        run: php builds/hyde --version

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: hyde
          path: builds/hyde

  test-executable:
    needs: build-executable
    # if: todo if branch is master?

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        php: [ 8.1 ]
#        php: [ 8.1, 8.2, 8.3 ]
#        type: [ anonymous, full ]

    runs-on: ${{ matrix.os }}
    name: Test executable - ${{ matrix.os }} ${{ matrix.php }}

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo

      - name: Download executable
        uses: actions/download-artifact@v2
        with:
          name: hyde
          path: ${{ runner.temp }}/hyde

      - name: Move download to system path (Linux and macOS)
        if: ${{ matrix.os != 'windows-latest' }}
        run: sudo mv ${{ runner.temp }}/hyde/hyde /usr/local/bin/hyde

      - name: Move download to system path (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: move ${{ runner.temp }}/hyde/hyde C:\Windows\System32\hyde.phar

      - name: Make executable (Linux and macOS)
        if: ${{ matrix.os != 'windows-latest' }}
        run: chmod +x ${{ runner.temp }}/hyde/hyde

      - name: Make executable (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
#         // Creates a wrapper script for the Phar executable
          echo @php "%~dp0hyde.phar" %* > ${{ runner.temp }}/hyde/hyde.cmd
#         // Adds the wrapper script to the system path
          move ${{ runner.temp }}/hyde/hyde.cmd C:\Windows\System32\hyde.cmd

      - name: Verify executable
        run: hyde --version
